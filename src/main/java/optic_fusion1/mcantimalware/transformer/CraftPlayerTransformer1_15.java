package optic_fusion1.mcantimalware.transformer;

import java.util.Collection;
import me.yamakaja.runtimetransformer.annotation.Inject;
import me.yamakaja.runtimetransformer.annotation.InjectionType;
import me.yamakaja.runtimetransformer.annotation.Transform;
import net.minecraft.server.v1_15_R1.EntityPlayer;
import optic_fusion1.mcantimalware.AntiMalware;
import optic_fusion1.mcantimalware.exceptions.FormattedSecurityException;
import org.bukkit.craftbukkit.v1_15_R1.entity.CraftPlayer;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.CallerInfo;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.RuntimeUtils;
import org.bukkit.GameMode;
import org.bukkit.craftbukkit.v1_15_R1.CraftServer;
import org.bukkit.potion.PotionEffect;

@Transform(CraftPlayer.class)
public class CraftPlayerTransformer1_15 extends CraftPlayer {

  public CraftPlayerTransformer1_15(CraftServer server, EntityPlayer entity) {
    super(server, entity);
  }

  @Override
  public void setGameMode(GameMode mode) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if(callerInfo != null){
      if(AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())){
        throw new FormattedSecurityException("{0} tried to set {1}'s gamemode to {2}", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName(), mode.toString()});
      }
    }
  }

  @Inject(InjectionType.INSERT)
  @Override
  public void setHealth(double health) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("{0} tried to set {1}'s heath to {2}", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName(), health});
      }
    }
  }

  @Inject(InjectionType.INSERT)
  @Override
  public boolean addPotionEffects(Collection<PotionEffect> effects) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("{0} tried giving {1} potion effects to {2}", new Object[]{callerInfo.getPlugin().getJar(), effects.size(), getDisplayName()});
      }
    }
    throw null;
  }

  @Inject(InjectionType.INSERT)
  @Override
  public boolean addPotionEffect(PotionEffect effect, boolean force) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("{0} tried giving {1} a potion effect Amplifier: {2} Duration: {3} Type: {4}", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName(), effect.getAmplifier(), effect.getDuration(), effect.getType().getName()});
      }
    }
    throw null;
  }

  @Inject(InjectionType.INSERT)
  @Override
  public boolean addPotionEffect(PotionEffect effect) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("{0} tried giving {1} a potion effect Amplifier: {2} Duration: {3} Type: {4}", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName(), effect.getAmplifier(), effect.getDuration(), effect.getType().getName()});
      }
    }
    throw null;
  }

  @Inject(InjectionType.INSERT)
  @Override
  public void kickPlayer(String message) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("{0} tried kicking {1} for the reason {2}", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName(), message});
      }
    }
  }

  @Inject(InjectionType.INSERT)
  @Override
  public void setOp(boolean value) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalware.getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        if (value) {
          setOp(false);
          throw new FormattedSecurityException("{0} tried to make {1} an op", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName()});
        } else {
          setOp(true);
          throw new FormattedSecurityException("{0} tried to de-op {1}", new Object[]{callerInfo.getPlugin().getJar(), getDisplayName()});
        }
      }
    }
  }
}
