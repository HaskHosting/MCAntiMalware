package optic_fusion1.antimalware.notifications.impl;

import java.awt.AWTException;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.nio.file.Path;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import optic_fusion1.antimalware.AntiMalware;
import static optic_fusion1.antimalware.AntiMalware.LOGGER;
import optic_fusion1.antimalware.notifications.NotificationSender;
import optic_fusion1.antimalware.check.CheckResult;
import optic_fusion1.antimalware.utils.I18n;

public class WindowsNotifSender implements NotificationSender {

  private static final SystemTray TRAY = SystemTray.getSystemTray();
  private static final Toolkit DEFAULT_TOOLKIT = Toolkit.getDefaultToolkit();
  private TrayIcon icon;

  public WindowsNotifSender() {
    icon = new TrayIcon(DEFAULT_TOOLKIT.createImage(AntiMalware.class.getResource("/index.jpg")),
            I18n.tl("notification_tool_tip_title"));
    icon.setImageAutoSize(true);
  }

  @Override
  public void sendNotification(Path path, CheckResult result) {
    icon.setToolTip(I18n.tl("notification_tool_tip_text", path, result.getPlatform(), result.getType(),
            result.getFamily(), result.getVariant(), result.getClassNodePath(), result.getLine(),
            result.getSourceFilePath()));
    try {
      TRAY.add(icon);
      icon.displayMessage(I18n.tl("notification_tool_tip_title"),
              I18n.tl("notification_tool_tip_text", path, result.getPlatform(), result.getType(),
                      result.getFamily(), result.getVariant(), result.getClassNodePath()),
              TrayIcon.MessageType.WARNING);
    } catch (AWTException ex) {
      LOGGER.exception(ex);
    }
    ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
    executor.schedule(() -> TRAY.remove(icon), 4, TimeUnit.MINUTES);
  }

}
