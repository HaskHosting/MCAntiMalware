/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.configuration.file;

import optic_fusion1.antimalware.configuration.MemoryConfiguration;
import optic_fusion1.antimalware.configuration.MemoryConfigurationOptions;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public class FileConfigurationOptions extends MemoryConfigurationOptions {

  private String header = null;
  private boolean copyHeader = true;

  protected FileConfigurationOptions(@NotNull MemoryConfiguration configuration) {
    super(configuration);
  }

  @NotNull
  @Override
  public FileConfiguration configuration() {
    return (FileConfiguration) super.configuration();
  }

  @NotNull
  @Override
  public FileConfigurationOptions copyDefaults(boolean value) {
    super.copyDefaults(value);
    return this;
  }

  @NotNull
  @Override
  public FileConfigurationOptions pathSeparator(char value) {
    super.pathSeparator(value);
    return this;
  }

  @Nullable
  public String header() {
    return header;
  }

  @NotNull
  public FileConfigurationOptions header(@Nullable String value) {
    this.header = value;
    return this;
  }

  public boolean copyHeader() {
    return copyHeader;
  }

  @NotNull
  public FileConfigurationOptions copyHeader(boolean value) {
    copyHeader = value;
    return this;
  }
}
