package optic_fusion1.mcantimalware.notification.impl;

import es.blackleg.jlibnotify.JLibnotify;
import es.blackleg.jlibnotify.JLibnotifyNotification;
import es.blackleg.jlibnotify.core.DefaultJLibnotifyLoader;
import es.blackleg.jlibnotify.exception.JLibnotifyInitException;
import es.blackleg.jlibnotify.exception.JLibnotifyLoadException;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import optic_fusion1.mcantimalware.Main;
import static optic_fusion1.mcantimalware.Main.LOGGER;
import optic_fusion1.mcantimalware.check.CheckResult;
import optic_fusion1.mcantimalware.notification.NotificationSender;
import optic_fusion1.mcantimalware.utils.I18n;

public class LinuxNotification implements NotificationSender {

  private JLibnotify libNotify;

  private Path notificationImage;

  public LinuxNotification() {
    try {
      libNotify = new DefaultJLibnotifyLoader().load();
      libNotify.init("AntiMalware");
    } catch (JLibnotifyLoadException ex) {
      LOGGER.exception(ex);
      return;
    } catch (JLibnotifyInitException ex) {
      LOGGER.exception(ex);
    }
    try {
      notificationImage = File.createTempFile("notificationImage", "").toPath();
      Files.copy(Main.class.getResource("/index.jpg").openStream(), notificationImage,
              StandardCopyOption.REPLACE_EXISTING);
    } catch (IOException e) {
      e.printStackTrace();
    }

  }

  @Override
  public void sendNotification(Path path, CheckResult result) {
    JLibnotifyNotification notification = libNotify.createNotification(
            I18n.tl("notification_tool_tip_title"), I18n.tl("notification_tool_tip_text", path,
            result.getPlatform(), result.getType(), result.getFamily(), result.getVariant(), result.getClassNodePath()),
            notificationImage.toAbsolutePath().toString());
    notification.show();
  }

}
