package optic_fusion1.mcantimalware.notification.impl;

import java.awt.AWTException;
import java.awt.Image;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.nio.file.Path;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import optic_fusion1.mcantimalware.Main;
import static optic_fusion1.mcantimalware.Main.LOGGER;
import optic_fusion1.mcantimalware.check.CheckResult;
import optic_fusion1.mcantimalware.notification.NotificationSender;
import optic_fusion1.mcantimalware.utils.I18n;

public class WindowsNotification implements NotificationSender {

  @Override
  public void sendNotification(Path path, CheckResult result) {
    String os = System.getProperty("os.name").toLowerCase();
    if (SystemTray.isSupported() && os.contains("win")) {
      SystemTray tray = SystemTray.getSystemTray();
      Image image = Toolkit.getDefaultToolkit().createImage(Main.class.getResource("/index.jpg"));
      TrayIcon trayIcon = new TrayIcon(image, "Malware Detected");
      trayIcon.setImageAutoSize(true);
      trayIcon.setToolTip(I18n.tl("might_be_infected_tool_tip", path));
      try {
        tray.add(trayIcon);
        trayIcon.displayMessage(I18n.tl("notification_tool_tip_title"),
                I18n.tl("notification_tool_tip_text", path, result.getPlatform(), result.getType(),
                        result.getFamily(), result.getVariant(), result.getClassNodePath()),
                TrayIcon.MessageType.WARNING);
      } catch (AWTException ex) {
        LOGGER.exception(ex);
      }
      ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
      executor.schedule(() -> tray.remove(trayIcon), 4, TimeUnit.MINUTES);
    }
  }

}
