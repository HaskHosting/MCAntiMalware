package optic_fusion1.mcantimalware.transformers;

import java.util.concurrent.Callable;
import net.bytebuddy.implementation.bind.annotation.SuperCall;
import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.exceptions.FormattedSecurityException;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.CallerInfo;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.RuntimeUtils;

public final class ServerListPingEventTransformer {

  private ServerListPingEventTransformer() {
  }

  public static void setServerIcon(@SuperCall Callable superCall)
          throws IllegalArgumentException, UnsupportedOperationException {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (Main.getInstance().getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("File: {0} is most likely malicious", callerInfo.getPlugin().getJar());
      }
    }
    try {
      superCall.call();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  public static void setMaxPlayers(@SuperCall Callable superCall) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (Main.getInstance().getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("File: {0} is most likely malicious", callerInfo.getPlugin().getJar());
      }
    }
    try {
      superCall.call();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  public static void setMotd(@SuperCall Callable superCall) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (Main.getInstance().getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("File: {0} is most likely malicious", callerInfo.getPlugin().getJar());
      }
    }
    try {
      superCall.call();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

}
