package optic_fusion1.mcantimalware.nbt.conversion.builtin;

import optic_fusion1.mcantimalware.nbt.conversion.ConverterRegistry;
import optic_fusion1.mcantimalware.nbt.conversion.TagConverter;
import optic_fusion1.mcantimalware.nbt.tag.builtin.CompoundTag;
import optic_fusion1.mcantimalware.nbt.tag.builtin.Tag;

import java.util.HashMap;
import java.util.Map;

/**
 * A converter that converts between CompoundTag and Map.
 */
public class CompoundTagConverter implements TagConverter<CompoundTag, Map> {

  @Override
  public Map convert(CompoundTag tag) {
    Map<String, Object> ret = new HashMap<>();
    Map<String, Tag> tags = tag.getValue();
    tags.keySet().stream().map(name -> tags.get(name)).forEachOrdered(t -> {
      ret.put(t.getName(), ConverterRegistry.convertToValue(t));
    });
    return ret;
  }

  @Override
  public CompoundTag convert(String name, Map value) {
    Map<String, Tag> tags = new HashMap<>();
    value.keySet().stream().map(na -> (String) na).forEachOrdered(n -> {
      tags.put((String) n, ConverterRegistry.convertToTag((String) n, value.get((String) n)));
    });
    return new CompoundTag(name, tags);
  }
}
