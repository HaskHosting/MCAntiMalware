package optic_fusion1.mcantimalware.spigotmcscanner;

import com.google.gson.JsonObject;
import com.google.gson.JsonSyntaxException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;

public class PluginVersionInfo {

  private final String GET_VERSION_NAME = "https://api.spiget.org/v2/resources/{RESOURCE}/versions/{VERSION}?fields=name";

  private final String name;
  private final int resource;
  private final int version;
  private String versionName;
  private final String fileType;

  public PluginVersionInfo(String name, int resource, int version, String fileType) {
    this.name = cleanTextContent(name);
    this.resource = resource;
    this.version = version;
    this.fileType = fileType;
  }

  public String getName() {
    return name;
  }

  public int getResource() {
    return resource;
  }

  public int getVersion() {
    return version;
  }

  public String getFileType() {
    return fileType;
  }

  public String getVersionName() {
    if (versionName == null) {
      try {
        fetchVersionName();
      } catch (JsonSyntaxException | IOException e) {
        e.printStackTrace();
        return "";
      }
    }
    return versionName;
  }

  private void fetchVersionName() throws JsonSyntaxException, MalformedURLException, IOException {
    URL fetchURL = new URL(
            GET_VERSION_NAME.replace("{RESOURCE}", String.valueOf(resource)).replace("{VERSION}", String.valueOf(version)));
    JsonObject jo = SpigotPluginDownloader.parseJson(fetchURL, JsonObject.class);
    versionName = cleanTextContent(jo.get("name").getAsString());
  }

  private static String cleanTextContent(String text) {
    text = text.replaceAll("[^\\x00-\\x7F]", "");
    text = text.replaceAll("[\\p{Cntrl}&&[^\r\n\t]]", "");
    text = text.replaceAll("\\p{C}", "");
    text = text.replace(" ", "");
    text = text.replace("/", "");
    text = text.replace(".", "");
    text = text.replace("-", "");
    return text.trim();
  }

}
